namespace MyTransport
{
    public abstract class Vehicle
    {
        public string Make { get; set; }
        public string Model { get; set; }
        public int Year { get; set; }

        protected Vehicle(string make, string model, int year)
        {
            Make = make;
            Model = model;
            Year = year;
        }

        public abstract void Start();
        public abstract void Stop();
    }
}
namespace MyTransport
{
    public abstract class LandVehicle : Vehicle
    {
        public int NumberOfWheels { get; set; }

        protected LandVehicle(string make, string model, int year, int numberOfWheels)
            : base(make, model, year)
        {
            NumberOfWheels = numberOfWheels;
        }

        public abstract void Drive();
    }
}
namespace MyTransport
{
    public abstract class WaterVehicle : Vehicle
    {
        public double Displacement { get; set; }

        protected WaterVehicle(string make, string model, int year, double displacement)
            : base(make, model, year)
        {
            Displacement = displacement;
        }

        public abstract void Sail();
    }
}
namespace MyTransport
{
    public class Car : LandVehicle
    {
        public Car(string make, string model, int year, int numberOfWheels)
            : base(make, model, year, numberOfWheels)
        {
        }

        public override void Start()
        {
            Console.WriteLine("The car is starting.");
        }

        public override void Stop()
        {
            Console.WriteLine("The car is stopping.");
        }

        public override void Drive()
        {
            Console.WriteLine("The car is driving.");
        }
    }
}
namespace MyTransport
{
    public class Bicycle : LandVehicle
    {
        public Bicycle(string make, string model, int year, int numberOfWheels)
            : base(make, model, year, numberOfWheels)
        {
        }

        public override void Start()
        {
            Console.WriteLine("The bicycle ride is starting.");
        }

        public override void Stop()
        {
            Console.WriteLine("The bicycle ride is stopping.");
        }

        public override void Drive()
        {
            Console.WriteLine("The bicycle is being ridden.");
        }
    }
}
namespace MyTransport
{
    public class Boat : WaterVehicle
    {
        public Boat(string make, string model, int year, double displacement)
            : base(make, model, year, displacement)
        {
        }

        public override void Start()
        {
            Console.WriteLine("The boat engine is starting.");
        }

        public override void Stop()
        {
            Console.WriteLine("The boat engine is stopping.");
        }

        public override void Sail()
        {
            Console.WriteLine("The boat is sailing.");
        }
    }
}
using System;

namespace MyTransport
{
    class Program
    {
        static void Main(string[] args)
        {
            Car myCar = new Car("Toyota", "Camry", 2020, 4);
            Bicycle myBicycle = new Bicycle("Giant", "Escape 3", 2021, 2);
            Boat myBoat = new Boat("Yamaha", "242X", 2019, 3000);

            myCar.Start();
            myCar.Drive();
            myCar.Stop();

            myBicycle.Start();
            myBicycle.Drive();
            myBicycle.Stop();

            myBoat.Start();
            myBoat.Sail();
            myBoat.Stop();
        }
    }
}
